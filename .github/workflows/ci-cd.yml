name: CI/CD Pipeline with Kubernetes

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_IMAGE: christianprants/desastres  # 👈 Altere para seu Docker Hub!
  K8S_NAMESPACE: sua-namespace          # 👈 Namespace no Kubernetes

jobs:
  # --------------------------------------------
  # ESTÁGIO 1: Build e Teste
  # --------------------------------------------
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
    - name: Build Docker image
      run: docker build -t ${{ env.DOCKER_IMAGE }}:latest .
      
    - name: Login to Docker Hub
      if: github.ref == 'refs/heads/main'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
    - name: Push Docker image
      if: github.ref == 'refs/heads/main'
      run: |
        docker push ${{ env.DOCKER_IMAGE }}:latest
        docker tag ${{ env.DOCKER_IMAGE }}:latest ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
        docker push ${{ env.DOCKER_IMAGE }}:${{ github.sha }}

  # --------------------------------------------
  # ESTÁGIO 2: Deploy para Staging (Kubernetes)
  # --------------------------------------------
  deploy-staging:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install kubectl
      uses: azure/setup-kubectl@v3
    
    - name: Configure Kubernetes Context
      run: |
        echo "${{ secrets.K8S_CONFIG_STAGING }}" > kubeconfig.yaml
        export KUBECONFIG=./kubeconfig.yaml
        
    - name: Deploy to Staging
      run: |
        kubectl config set-context --current --namespace=${{ env.K8S_NAMESPACE }}
        kubectl apply -f k8s/staging-deployment.yaml
        kubectl apply -f k8s/staging-service.yaml
        kubectl rollout status deployment/app-deployment -n ${{ env.K8S_NAMESPACE }}

  # --------------------------------------------
  # ESTÁGIO 3: Deploy para Production (Com Aprovação)
  # --------------------------------------------
  deploy-production:
    needs: deploy-staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install kubectl
      uses: azure/setup-kubectl@v3
    
    - name: Manual Approval
      uses: trstringer/manual-approval@v1
      with:
        secret: ${{ github.token }}
        approvers: "christian-prants"  # 👈 Quem pode aprovar
        minimum-approvals: 1
    
    - name: Configure Kubernetes Context
      run: |
        echo "${{ secrets.K8S_CONFIG_PROD }}" > kubeconfig.yaml
        export KUBECONFIG=./kubeconfig.yaml
        
    - name: Deploy to Production
      run: |
        kubectl config set-context --current --namespace=${{ env.K8S_NAMESPACE }}
        kubectl apply -f k8s/production-deployment.yaml
        kubectl apply -f k8s/production-service.yaml
        kubectl rollout status deployment/app-deployment -n ${{ env.K8S_NAMESPACE }}